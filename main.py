from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton


TOKEN = "5353856334:AAHh050ulalH8t_aIUTFN-JUAv99SmiYCeQ"


# FUNCTION
def get_univ(dir, points):
    # information about universities (names of specialties, passing scores and a link to the picture)
    univ_1 = {"–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç –ú–ì–£": [260, 280, "img/msu.jpg"],
             "–ë–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –í–®–≠": [280, 300, "img/hse.jpg"],
             "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è–º–∏ –†–£–î–ù": [240, 260, "img/rudn.jpg"]}
    univ_2 = {"–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–µ –ø—Ä–∞–≤–æ –§–∏–Ω–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç": [260, 280, "img/fin.jpg"],
              "–Æ—Ä–∏—Å–ø—Ä—É–¥–µ–Ω—Ü–∏—è –†–ì–£ –Ω–µ—Ñ—Ç–∏ –∏ –≥–∞–∑–∞": [240, 260, "img/rgu.jpg"],
              "–§–∞–∫—É–ª—å—Ç–µ—Ç –ø—Ä–∞–≤–∞ –í–®–≠": [280, 300, "img/hse.jpg"]}
    univ_3 = {"–§–∏–∑–∏–∫–∞ –ù–ò–Ø–£ –ú–ò–§–ò": [260, 280, "img/mifi.jpg"],
              "–ü—Ä–∏–∫–ª–∞–¥–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –ú–ì–¢–£ –∏–º. –ë–∞—É–º–∞–Ω–∞": [280, 300, "img/mgtu.jpg"],
              "–ë–∏–æ—Ö–∏–º–∏—á–µ—Å–∫–∞—è —Ñ–∏–∑–∏–∫–∞ –°–ü–±–ì–£": [240, 260, "img/spbgu.jpg"]}
    univ_4 = {"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ò–¢–ú–û": [260, 280, "img/itmo.jpg"],
              "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –∏ —Ç–µ–ª–µ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ –ú–ì–¢–£ –∏–º. –ë–∞—É–º–∞–Ω–∞": [280, 300, "img/mgtu.jpg"],
              "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –≤ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–µ –ú–ì–°–£": [240, 260, "img/mgsu.jpg"]}
    univ_list = []
    photo_link = []
    # add to list right universities and right image
    if dir == "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ –±–∏–∑–Ω–µ—Åü§ù":
        for u, p in univ_1.items():
            if p[0] <= points <= p[1]:
                univ_list.append(u)
                photo_link.append(p[-1])
    elif dir == "–Æ—Ä–∏—Å–ø—Ä–µ–¥–µ–Ω—Ü–∏—è –∏ –ø—Ä–∞–≤–æüìö":
        for u, p in univ_2.items():
            if p[0] <= points <= p[1]:
                univ_list.append(u)
                photo_link.append(p[-1])
    elif dir == "–§–∏–∑-–º–∞—Ç –Ω–∞—É–∫–∏üìê":
        for u, p in univ_3.items():
            if p[0] <= points <= p[1]:
                univ_list.append(u)
                photo_link.append(p[-1])
    elif dir == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏üñ•":
        for u, p in univ_4.items():
            if p[0] <= points <= p[1]:
                univ_list.append(u)
                photo_link.append(p[-1])
    return univ_list, photo_link


# BUTTONS
DIR_1 = KeyboardButton('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ –±–∏–∑–Ω–µ—Åü§ù')
DIR_2 = KeyboardButton('–Æ—Ä–∏—Å–ø—Ä–µ–¥–µ–Ω—Ü–∏—è –∏ –ø—Ä–∞–≤–æüìö')
DIR_3 = KeyboardButton('–§–∏–∑-–º–∞—Ç –Ω–∞—É–∫–∏üìê')
DIR_4 = KeyboardButton('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏üñ•')

POINTS_240 = "240-260üåö"
POINTS_260 = "260-280üéì"
POINTS_280 = "280-300üï∂"

# KEYBOARDS
KB_DIR = ReplyKeyboardMarkup(resize_keyboard=True)
KB_DIR.add(DIR_1, DIR_2, DIR_3, DIR_4)

KB_POINTS = ReplyKeyboardMarkup(resize_keyboard=True)
KB_POINTS.add(POINTS_240, POINTS_260, POINTS_280)


users = {}


bot = Bot(token=TOKEN)
dp = Dispatcher(bot)


# bot launch handling
@dp.message_handler(commands=['start'])
async def start_(message: types.Message):
    user_id = str(message.from_user.id)
    # dictionary for each individual user
    users[user_id] = {"dir": None, "points": None, "state_point": False, "photo": None}
    await message.reply(f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}\n–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –í–∞–º –≤—ã–±—Ä–∞—Ç—å –Ω–∞–∏–±–æ–ª–µ–µ "
                        f"–ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤—É–∑ –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –∏ –±–∞–ª–ª–∞–º")
    await message.reply(f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", reply_markup=KB_DIR)


# handling incoming messages
@dp.message_handler()
async def info(message: types.Message):
    user_id = str(message.from_user.id)
    if message.text == '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ –±–∏–∑–Ω–µ—Åü§ù':
        users[user_id]["dir"] = '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ –±–∏–∑–Ω–µ—Åü§ù'
        users[user_id]["state_point"] = True
        await message.reply(f"–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª-–≤–æ –±–∞–ª–ª–æ–≤ –∑–∞ 3 –ø—Ä–µ–¥–º–µ—Ç–∞(–û–ë–©/–ê–ù–ì–õ/–†–£–°) –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –î–†–£–ì–û–ï(–ü–†–ò–ú–ï–†: 234)",
                            reply_markup=KB_POINTS)
    if message.text == '–Æ—Ä–∏—Å–ø—Ä–µ–¥–µ–Ω—Ü–∏—è –∏ –ø—Ä–∞–≤–æüìö':
        users[user_id]["dir"] = '–Æ—Ä–∏—Å–ø—Ä–µ–¥–µ–Ω—Ü–∏—è –∏ –ø—Ä–∞–≤–æüìö'
        users[user_id]["state_point"] = True
        await message.reply(f"–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª-–≤–æ –±–∞–ª–ª–æ–≤ –∑–∞ 3 –ø—Ä–µ–¥–º–µ—Ç–∞(–û–ë–©/–ò–°–¢/–†–£–°) –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –î–†–£–ì–û–ï(–ü–†–ò–ú–ï–†: 234)",
                            reply_markup=KB_POINTS)
    if message.text == '–§–∏–∑-–º–∞—Ç –Ω–∞—É–∫–∏üìê':
        users[user_id]["dir"] = '–§–∏–∑-–º–∞—Ç –Ω–∞—É–∫–∏üìê'
        users[user_id]["state_point"] = True
        await message.reply(f"–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª-–≤–æ –±–∞–ª–ª–æ–≤ –∑–∞ 3 –ø—Ä–µ–¥–º–µ—Ç–∞(–ú–ê–¢/–§–ò–ó/–†–£–°) –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –î–†–£–ì–û–ï(–ü–†–ò–ú–ï–†: 234)",
                            reply_markup=KB_POINTS)
    if message.text == '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏üñ•':
        users[user_id]["dir"] = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏üñ•'
        users[user_id]["state_point"] = True
        await message.reply(f"–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª-–≤–æ –±–∞–ª–ª–æ–≤ –∑–∞ 3 –ø—Ä–µ–¥–º–µ—Ç–∞(–ò–ù–§/–ú–ê–¢/–†–£–°) –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –î–†–£–ì–û–ï(–ü–†–ò–ú–ï–†: 234)",
                            reply_markup=KB_POINTS)
    if users[user_id]["state_point"]:
        if message.text.isdigit():
            users[user_id]["points"] = int(message.text)
            users[user_id]["state_point"] = True
            users[user_id]["photo"] = False
            await message.reply(f'{"".join(get_univ(users[user_id]["dir"], users[user_id]["points"])[0])}',
                                reply_markup=KB_DIR)
            for link in get_univ(users[user_id]["dir"], users[user_id]["points"])[1]:
                await bot.send_photo(user_id, open(link, 'rb'))
        if (message.text == '240-260üåö' or message.text == '260-280üéì' or message.text == '280-300üï∂'
            or message.text.isdigit()):
            users[user_id]["points"] = int(message.text.split("-")[0]) + 10
            users[user_id]["state_point"] = False
            users[user_id]["photo"] = False
            await message.reply(f'{"".join(get_univ(users[user_id]["dir"], users[user_id]["points"])[0])}',
                                reply_markup=KB_DIR)
            for link in get_univ(users[user_id]["dir"], users[user_id]["points"])[1]:
                await bot.send_photo(user_id, open(link, 'rb'))


if __name__ == '__main__':
    executor.start_polling(dp)